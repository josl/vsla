{"version":3,"sources":["webpack:///./node_modules/gatsby-link/index.js","webpack:///./node_modules/naviboard/dist/index.js","webpack:///./node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js","webpack:///./node_modules/naviboard/lib/naviboard.js"],"names":["_interopRequireDefault","__webpack_require__","exports","__esModule","withPrefix","navigateTo","replace","push","navigate","default","_objectWithoutPropertiesLoose2","_extends2","_inheritsLoose2","_assertThisInitialized2","_defineProperty2","_propTypes","_react","_router","_gatsby","path","normalizePath","NavLinkPropTypes","activeClassName","string","activeStyle","object","GatsbyLink","_React$Component","props","_this","call","this","_ref","isCurrent","className","filter","Boolean","join","style","IOSupported","window","IntersectionObserver","state","handleRef","bind","_proto","prototype","componentDidUpdate","prevProps","prevState","to","___loader","enqueue","parsePath","pathname","componentDidMount","ref","el","cb","io","_this2","innerRef","entries","forEach","entry","target","isIntersecting","intersectionRatio","unobserve","disconnect","observe","render","_this3","_this$props","_this$props$getProps","getProps","defaultGetProps","_onClick","onClick","_onMouseEnter","onMouseEnter","rest","prefixedTo","createElement","Link","e","hovering","button","defaultPrevented","metaKey","altKey","ctrlKey","shiftKey","preventDefault","Component","propTypes","func","isRequired","bool","_default","options","___navigate","console","warn","___push","___replace","naviBoard","module","source","excluded","key","i","sourceKeys","Object","keys","length","indexOf","masterElement","naviboard","currentEvent","componentRendered","matrixForNavigation","currentX","currentY","activeElement","prevComponentRendered","prevActiveElement","nextComponentRendered","arrayOfCoordinates","initialOffsetX","initialOffsetY","resume","matrixWidth","matrixHeight","_getLocationOfActiveElement","elem","j","getWindowRelativeOffset","getBoundingClientRect","makeNavigationRulesForComponent","obj","row","column","self","navArray","JSON","parse","stringify","createArray","arr","Array","arguments","args","slice","apply","Promise","resolve","reject","threshold_width","threshold_height","temp1","temp2","t_width","t_height","arrToFill","from","create","_expandElement","toFill","x","y","m","n","undefined","elemWidth","Math","round","offset","elemHeight","elementToFocus","fillNavigationArray","list","iValue","sort","a","b","x_first","x_second","sorted_by_x","arr_to_push","_INIT","value_x","Set","reduce","c","concat","map","splice","sortByXYcoordinate","err","then","matrix","prevcomponent_back","coordsOfPreviousElement","focus","log","prevTime","Date","getTime","destroyCurrentNavigationView","id","status","newTime","max","xFilled","yFilled","findMinMaxWidth","min_left","left","max_right","right","min_top","top","max_bottom","bottom","len","v","p","u","q","increaseRowCountIfRequired","rowcount","includes","increaseColumnCountIfRequired","columnCount","handleView","elementIdOfComponentDOM","document","getElementById","getElementsByClassName","children","tabIndex","offsetXY","getActiveElement","setNavigation","destroyNavigation","getCurrentEvent","event","refreshNavigation","getNavigationComponent","resumeNavigation","pauseNavigation","handleKeyDown","maxHeight","maxWidth","check_the_left","_column","blur","check_the_right","check_the_top","_row","check_the_bottom","keyCode","found","addEventListener"],"mappings":"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","file":"0-6db90ef2a812286f5e7f.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.withPrefix = withPrefix;\nexports.navigateTo = exports.replace = exports.push = exports.navigate = exports.default = void 0;\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _router = require(\"@reach/router\");\n\nvar _gatsby = require(\"gatsby\");\n\n/*global __PATH_PREFIX__ */\nfunction withPrefix(path) {\n  return normalizePath(__PATH_PREFIX__ + \"/\" + path);\n}\n\nfunction normalizePath(path) {\n  return path.replace(/\\/+/g, \"/\");\n}\n\nvar NavLinkPropTypes = {\n  activeClassName: _propTypes.default.string,\n  activeStyle: _propTypes.default.object // Set up IntersectionObserver\n\n};\n\nvar handleIntersection = function handleIntersection(el, cb) {\n  var io = new window.IntersectionObserver(function (entries) {\n    entries.forEach(function (entry) {\n      if (el === entry.target) {\n        // Check if element is within viewport, remove listener, destroy observer, and run link callback.\n        // MSEdge doesn't currently support isIntersecting, so also test for  an intersectionRatio > 0\n        if (entry.isIntersecting || entry.intersectionRatio > 0) {\n          io.unobserve(el);\n          io.disconnect();\n          cb();\n        }\n      }\n    });\n  }); // Add element to the observer\n\n  io.observe(el);\n};\n\nvar GatsbyLink =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inheritsLoose2.default)(GatsbyLink, _React$Component);\n\n  function GatsbyLink(props) {\n    var _this;\n\n    _this = _React$Component.call(this) || this; // Default to no support for IntersectionObserver\n\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), \"defaultGetProps\", function (_ref) {\n      var isCurrent = _ref.isCurrent;\n\n      if (isCurrent) {\n        return {\n          className: [_this.props.className, _this.props.activeClassName].filter(Boolean).join(\" \"),\n          style: (0, _extends2.default)({}, _this.props.style, _this.props.activeStyle)\n        };\n      }\n\n      return null;\n    });\n    var IOSupported = false;\n\n    if (typeof window !== \"undefined\" && window.IntersectionObserver) {\n      IOSupported = true;\n    }\n\n    _this.state = {\n      IOSupported: IOSupported\n    };\n    _this.handleRef = _this.handleRef.bind((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)));\n    return _this;\n  }\n\n  var _proto = GatsbyLink.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n    // Preserve non IO functionality if no support\n    if (this.props.to !== prevProps.to && !this.state.IOSupported) {\n      ___loader.enqueue((0, _gatsby.parsePath)(this.props.to).pathname);\n    }\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    // Preserve non IO functionality if no support\n    if (!this.state.IOSupported) {\n      ___loader.enqueue((0, _gatsby.parsePath)(this.props.to).pathname);\n    }\n  };\n\n  _proto.handleRef = function handleRef(ref) {\n    var _this2 = this;\n\n    this.props.innerRef && this.props.innerRef(ref);\n\n    if (this.state.IOSupported && ref) {\n      // If IO supported and element reference found, setup Observer functionality\n      handleIntersection(ref, function () {\n        ___loader.enqueue((0, _gatsby.parsePath)(_this2.props.to).pathname);\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    var _this3 = this;\n\n    var _this$props = this.props,\n        to = _this$props.to,\n        _this$props$getProps = _this$props.getProps,\n        getProps = _this$props$getProps === void 0 ? this.defaultGetProps : _this$props$getProps,\n        _onClick = _this$props.onClick,\n        _onMouseEnter = _this$props.onMouseEnter,\n        $activeClassName = _this$props.activeClassName,\n        $activeStyle = _this$props.activeStyle,\n        $ref = _this$props.ref,\n        $innerRef = _this$props.innerRef,\n        state = _this$props.state,\n        replace = _this$props.replace,\n        rest = (0, _objectWithoutPropertiesLoose2.default)(_this$props, [\"to\", \"getProps\", \"onClick\", \"onMouseEnter\", \"activeClassName\", \"activeStyle\", \"ref\", \"innerRef\", \"state\", \"replace\"]);\n    var prefixedTo = withPrefix(to);\n    return _react.default.createElement(_router.Link, (0, _extends2.default)({\n      to: prefixedTo,\n      state: state,\n      getProps: getProps,\n      innerRef: this.handleRef,\n      onMouseEnter: function onMouseEnter(e) {\n        // eslint-disable-line\n        _onMouseEnter && _onMouseEnter(e);\n\n        ___loader.hovering((0, _gatsby.parsePath)(to).pathname);\n      },\n      onClick: function onClick(e) {\n        // eslint-disable-line\n        _onClick && _onClick(e);\n\n        if (e.button === 0 && // ignore right clicks\n        !_this3.props.target && // let browser handle \"target=_blank\"\n        !e.defaultPrevented && // onClick prevented default\n        !e.metaKey && // ignore clicks with modifier keys...\n        !e.altKey && !e.ctrlKey && !e.shiftKey) {\n          e.preventDefault(); // Make sure the necessary scripts and data are\n          // loaded before continuing.\n\n          navigate(to, {\n            state: state,\n            replace: replace\n          });\n        }\n\n        return true;\n      }\n    }, rest));\n  };\n\n  return GatsbyLink;\n}(_react.default.Component);\n\nGatsbyLink.propTypes = (0, _extends2.default)({}, NavLinkPropTypes, {\n  innerRef: _propTypes.default.func,\n  onClick: _propTypes.default.func,\n  to: _propTypes.default.string.isRequired,\n  replace: _propTypes.default.bool\n});\nvar _default = GatsbyLink;\nexports.default = _default;\n\nvar navigate = function navigate(to, options) {\n  window.___navigate(withPrefix(to), options);\n};\n\nexports.navigate = navigate;\n\nvar push = function push(to) {\n  console.warn(\"The \\\"push\\\" method is now deprecated and will be removed in Gatsby v3. Please use \\\"navigate\\\" instead.\");\n\n  window.___push(withPrefix(to));\n};\n\nexports.push = push;\n\nvar replace = function replace(to) {\n  console.warn(\"The \\\"replace\\\" method is now deprecated and will be removed in Gatsby v3. Please use \\\"navigate\\\" instead.\");\n\n  window.___replace(withPrefix(to));\n}; // TODO: Remove navigateTo for Gatsby v3\n\n\nexports.replace = replace;\n\nvar navigateTo = function navigateTo(to) {\n  console.warn(\"The \\\"navigateTo\\\" method is now deprecated and will be removed in Gatsby v3. Please use \\\"navigate\\\" instead.\");\n  return push(to);\n};\n\nexports.navigateTo = navigateTo;","\"use strict\";\n\n// import naviBoard from '../lib/naviboard';\nvar naviBoard = require('../lib/naviboard');\n\nmodule.exports = naviBoard;","function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutPropertiesLoose;","var masterElement = window;\n\nfunction naviboard() {\n    this.currentEvent = null;\n    this.componentRendered = null;\n    this.matrixForNavigation = null;\n    this.currentX = 0;\n    this.currentY = 0;\n    this.activeElement = null;\n    this.prevComponentRendered = [];\n    this.prevActiveElement = [];\n    this.nextComponentRendered = null;\n    this.arrayOfCoordinates = [];\n    this.initialOffsetX = 0;\n    this.initialOffsetY = 0;\n    this.resume = true;\n    this.matrixWidth = 0;\n    this.matrixHeight = 0;\n}\n\nnaviboard.prototype._getLocationOfActiveElement = function(elem) {\n    if (this.matrixForNavigation != null) {\n        for (var i = 0; i < this.matrixForNavigation.length; i++) {\n            for (var j = 0; j < this.matrixForNavigation[0].length; j++) {\n                if (this.matrixForNavigation[i][j] == elem) {\n                    // console.log(\"getLocation\" + i + ' ' + j);\n                    return [i, j];\n                    break;\n                }\n            }\n        }\n    }\n    return [0, 0];\n};\n\nnaviboard.prototype.getWindowRelativeOffset = function(elem) {\n    var offset = {\n        left: 0,\n        top: 0\n    };\n    var offset = elem.getBoundingClientRect();\n    return offset;\n};\n\nfunction createArray(length) {\n    var arr = new Array(length || 0),\n        i = length;\n\n    if (arguments.length > 1) {\n        var args = Array.prototype.slice.call(arguments, 1);\n        while (i--) arr[length - 1 - i] = createArray.apply(this, args);\n    }\n\n    return arr;\n}\n\nfunction fillNavigationArray(temp1, temp2, t_width, t_height) {\n    var arrToFill = Array.from(Object.create(temp2));\n    var obj = temp1;\n\n    function _expandElement(toFill, elem, x, y, m, n) {\n        for (var i = 0; i < n; i++) {\n            for (var j = 0; j < m; j++) {\n                toFill[x + i][y + j] = elem;\n            }\n        }\n    }\n    if (obj != undefined && obj != []) {\n        for (var i = 0; i < obj.length; i++) {\n            for (var j = 0; j < obj[i].length; j++) {\n                if (obj[i][j] != null) {\n                    var elemWidth = Math.round((obj[i][j].offset.width) / t_width);\n                    var elemHeight = Math.round((obj[i][j].offset.height) / t_height);\n                }\n                if (obj[i][j] !== null && (elemWidth > 1 || elemHeight > 1)) {\n                    _expandElement(arrToFill, obj[i][j].elementToFocus, i, j, elemWidth, elemHeight);\n                } else if (obj[i][j] !== null) {\n                    arrToFill[i][j] = obj[i][j].elementToFocus;\n                } else {\n                    // \"Its null and non expanding!!\n                }\n            }\n        }\n    }\n    return arrToFill;\n}\n\nnaviboard.prototype.makeNavigationRulesForComponent = function(obj, row, column) {\n    var self = this;\n    // console.log(row, column);\n    var navArray = JSON.parse(JSON.stringify(createArray(row, column)));\n\n    var _getMatrixForNavigation = new Promise((resolve, reject) => {\n\n        var threshold_width = this.matrixWidth / column;\n        var threshold_height = this.matrixHeight / row;\n\n        var sortByXYcoordinate = function(list) {\n\n            for (var i = 0; i < list.length; i++) {\n                var iValue = (list.length * list[i].offset.x) + list[i].offset.y;\n                list[i].iValue = iValue;\n            }\n            list.sort(function(a, b) {\n                var x_first = a.offset.y;\n                var x_second = b.offset.y;\n                return (x_first < x_second) ? -1 : (x_first > x_second) ? 1 : 0;\n            });\n\n            var sorted_by_x = [];\n            var arr_to_push = [];\n            var _INIT = false;\n            for (var i = 0; i < list.length; i++) {\n                if (!_INIT) {\n                    arr_to_push.push(list[i]);\n                    _INIT = true;\n                } else {\n                    if (list[i].offset.y > arr_to_push[arr_to_push.length - 1].offset.y && i != list.length - 1) {\n                        sorted_by_x.push(arr_to_push);\n                        arr_to_push = [];\n                        arr_to_push.push(list[i]);\n                    } else if (i === list.length - 1) {\n                        if (list[i].offset.y > arr_to_push[arr_to_push.length - 1].offset.y) {\n                            sorted_by_x.push(arr_to_push);\n                            arr_to_push = [];\n                            arr_to_push.push(list[i]);\n                            sorted_by_x.push(arr_to_push);\n                        } else {\n                            arr_to_push.push(list[i]);\n                            sorted_by_x.push(arr_to_push);\n                        }\n                    } else {\n                        arr_to_push.push(list[i]);\n                    }\n                }\n            }\n            if (arr_to_push.length > 0 && sorted_by_x.length == 0) {\n                sorted_by_x.push(arr_to_push);\n            }\n\n            for (var j = 0; j < sorted_by_x.length; j++) {\n                sorted_by_x[j].sort(function(a, b) {\n                    var x_first = a.offset.x;\n                    var x_second = b.offset.x;\n                    return (x_first < x_second) ? -1 : (x_first > x_second) ? 1 : 0;\n                });\n            }\n\n            var value_x = [...new Set(sorted_by_x.reduce((a, c) => a.concat(c.map(({ offset: { x } }) => x)), []))].sort((a, b) => a - b)\n\n            sorted_by_x.forEach(row => {\n                value_x.forEach((x, i) => {\n                    if (row[i] === undefined || row[i].offset.x > x) {\n                        row.splice(i, 0, null)\n                    }\n                });\n            });\n            return sorted_by_x;\n        }\n        resolve(fillNavigationArray(sortByXYcoordinate(obj), navArray, threshold_width, threshold_height));\n        reject(err);\n    });\n\n    _getMatrixForNavigation.then((matrix) => {\n        self.matrixForNavigation = matrix;\n        if (self.matrixForNavigation.length != 0 && self.matrixForNavigation != undefined) {\n            var prevcomponent_back=false;\n            if (self.prevComponentRendered.length >= 2 && self.prevActiveElement.length >= 2) {\n                if (self.prevComponentRendered[self.prevComponentRendered.length - 2] == self.nextComponentRendered && self.prevComponentRendered[self.prevComponentRendered.length - 2] != null && self.nextComponentRendered != null) {\n                    var coordsOfPreviousElement = self.prevActiveElement[self.prevActiveElement.length - 2];\n                    self.currentX = coordsOfPreviousElement[0];\n                    self.currentY = coordsOfPreviousElement[1];\n                    prevcomponent_back=true;\n                }\n            }\n            if (self.matrixForNavigation.length < self.currentX && self.matrixForNavigation[0].length < self.currentY) {\n                for (var j = 0; j < self.matrixForNavigation[0].length; j++) {\n                    if (self.matrixForNavigation[0][j] != null) {\n                        self.currentX = 0;\n                        self.currentY = j;\n                        self.activeElement = self.matrixForNavigation[self.currentX][self.currentY];\n                        self.activeElement.focus();\n                        break;\n                    }\n                }\n            }else if(self.matrixForNavigation.length > self.currentX && self.matrixForNavigation[0].length > self.currentY && prevcomponent_back){\n                self.activeElement = self.matrixForNavigation[self.currentX][self.currentY];\n                self.activeElement.focus();\n            } else if (self.matrixForNavigation.length > self.currentX && self.matrixForNavigation[0].length > self.currentY) {\n\n                for (var j = 0; j < self.matrixForNavigation[0].length; j++) {\n                    if (self.matrixForNavigation[0][j] != null) {\n                        self.currentX = 0;\n                        self.currentY = j;\n                        self.activeElement = self.matrixForNavigation[self.currentX][self.currentY];\n                        self.activeElement.focus();\n                        break;\n                    }\n                }\n            } else {\n                for (var j = 0; j < self.matrixForNavigation[0].length; j++) {\n                    if (self.matrixForNavigation[0][j] != null) {\n                        self.currentX = 0;\n                        self.currentY = j;\n                        self.activeElement = self.matrixForNavigation[self.currentX][self.currentY];\n                        self.activeElement.focus();\n                        break;\n                    }\n                }\n            }\n        }\n    }, (err) => {\n        console.log(err);\n    });\n}\n\nvar prevTime = new Date().getTime();\n\nnaviboard.prototype.destroyCurrentNavigationView = function(id, status) {\n    var newTime = new Date().getTime();\n    if (newTime - prevTime < 250) {\n        prevTime = newTime;\n        return false\n    } else {\n        if (status == \"destroy\") {\n            this.prevComponentRendered.push(this.componentRendered);\n            if (this.prevComponentRendered.length >= 5) {\n                this.prevComponentRendered = this.prevComponentRendered.slice(Math.max(this.prevComponentRendered.length - 5, 2))\n\n            }\n            this.prevActiveElement.push(this._getLocationOfActiveElement(this.activeElement));\n            if (this.prevActiveElement.length >= 5) {\n                this.prevActiveElement = this.prevActiveElement.slice(Math.max(this.prevActiveElement.length - 5, 2));\n            }\n            this.arrayOfCoordinates = [];\n            xFilled = [];\n            yFilled = [];\n            this.initialOffsetX = 0;\n            this.initialOffsetY = 0;\n            this.matrixForNavigation = null;\n            this.currentX = 0;\n            this.currentY = 0;\n            this.activeElement = null;\n            this.currentEvent = null;\n            this.componentRendered = null;\n            prevTime = newTime;\n            return true;\n\n        } else {\n            xFilled = [];\n            yFilled = [];\n            this.arrayOfCoordinates = [];\n            this.initialOffsetX = 0;\n            this.initialOffsetY = 0;\n            this.matrixForNavigation = null;\n            this.currentX = 0;\n            this.currentY = 0;\n            this.activeElement = null;\n            this.currentEvent = null;\n            prevTime = newTime;\n            return true;\n        }\n    }\n}\nvar xFilled = [];\nvar yFilled = [];\n\nfunction findMinMaxWidth(arr) {\n    let min_left = arr[0].offset.left,\n        max_right = arr[0].offset.right;\n    let min_top = arr[0].offset.top,\n        max_bottom = arr[0].offset.bottom;\n\n    for (let i = 1, len = arr.length; i < len; i++) {\n        let v = arr[i].offset.left;\n        let p = arr[i].offset.top;\n        let u = arr[i].offset.right;\n        let q = arr[i].offset.bottom;\n        min_left = (v < min_left) ? v : min_left;\n        min_top = (p < min_top) ? p : min_top;\n        max_right = (u > max_right) ? u : max_right;\n        max_bottom = (q > max_bottom) ? q : max_bottom;\n    }\n    var width = max_right - min_left;\n    var height = max_bottom - min_top;\n    return [width, height];\n}\n\nnaviboard.prototype.increaseRowCountIfRequired = function(offset, rowcount) {\n\n    offset.y = Math.round(offset.y);\n    if (offset.y > this.initialOffsetY && offset.y > Math.max(...yFilled)) {\n        this.initialOffsetY = offset.y;\n        yFilled.push(offset.y);\n        return rowcount + 1;\n    } else if (offset.y < this.initialOffsetY && !yFilled.includes(offset.y)) {\n        this.initialOffsetY = offset.y;\n        yFilled.push(offset.y);\n        return rowcount + 1;\n    } else {\n        return rowcount;\n    }\n}\nnaviboard.prototype.increaseColumnCountIfRequired = function(offset, columnCount) {\n    offset.x = Math.round(offset.x);\n\n    if (offset.x > this.initialOffsetX && offset.x > Math.max(...xFilled)) {\n        this.initialOffsetX = offset.x;\n        xFilled.push(offset.x);\n        return columnCount + 1;\n    } else if (offset.x < this.initialOffsetX && !xFilled.includes(offset.x)) {\n        this.initialOffsetX = offset.x;\n        xFilled.push(offset.x);\n        return columnCount + 1;\n    } else {\n        return columnCount;\n    }\n}\n\nnaviboard.prototype.handleView = function(elementIdOfComponentDOM) {\n    var self = this;\n    self.arrayOfCoordinates = [];\n    self.componentRendered = elementIdOfComponentDOM;\n    var childNodes = [];\n    var _getAllChildNodes = new Promise((resolve, reject) => {\n        masterElement = document.getElementById(elementIdOfComponentDOM);\n        childNodes = masterElement.getElementsByClassName(\"navigable\");\n        resolve(childNodes);\n        reject(err);\n    });\n\n    _getAllChildNodes.then((children) => {\n        var row = 0;\n        var column = 0;\n\n        for (var i = 0; i < children.length; i++) {\n            children[i].tabIndex = children[i].tabIndex === -1 ? 0 : children[i].tabIndex;\n            var offsetXY = self.getWindowRelativeOffset(children[i]);\n            row = self.increaseRowCountIfRequired(offsetXY, row);\n            column = self.increaseColumnCountIfRequired(offsetXY, column);\n            var obj = {\n                \"offset\": offsetXY,\n                \"elementToFocus\": children[i]\n            }\n            self.arrayOfCoordinates.push(obj);\n        }\n        self.matrixWidth = findMinMaxWidth(self.arrayOfCoordinates)[0];\n        self.matrixHeight = findMinMaxWidth(self.arrayOfCoordinates)[1];\n        self.makeNavigationRulesForComponent(self.arrayOfCoordinates, row, column);\n    }, (err) => {\n        console.log(err);\n    });\n}\n\nvar naviBoard = new naviboard();\n\nnaviBoard.getActiveElement = function() {\n    return this.activeElement;\n}\n\nnaviBoard.setNavigation = function(id) {\n    if (this.matrixForNavigation === null) {\n        this.nextComponentRendered = id;\n        this.handleView(id);\n    } else {\n        // console.log(\"Destroy the previous navigation first!\");\n    }\n}\n\nnaviBoard.destroyNavigation = function(id) {\n    this.destroyCurrentNavigationView(id, \"destroy\");\n}\n\n\nnaviBoard.getCurrentEvent = function(event) {\n    return this.currentEvent;\n};\n\nnaviBoard.refreshNavigation = function(id, status) {\n    if (status == \"refresh\") {\n        this.prevComponentRendered.push(this.componentRendered);\n        this.prevActiveElement.push(this._getLocationOfActiveElement(activeElement));\n        var refreshstatus = this.destroyCurrentNavigationView(id, \"destroy\");\n        if (refreshstatus) {\n            this.handleView(id);\n        } else {}\n    } else {\n        var refreshstatus = false;\n        refreshstatus = this.destroyCurrentNavigationView(id, status);\n        if (refreshstatus) {\n            this.handleView(id);\n        } else {}\n    }\n}\n\nnaviBoard.getNavigationComponent = function() {\n    return this.componentRendered;\n}\n\nnaviBoard.resumeNavigation = function() {\n    this.resume = true;\n}\nnaviBoard.pauseNavigation = function() {\n    this.resume = false;\n}\nvar handleKeyDown = function(event) {\n    if (this.matrixForNavigation !== null && this.resume) {\n        var maxHeight = this.matrixForNavigation.length;\n        var maxWidth = this.matrixForNavigation[0].length;\n\n        var check_the_left = function() {\n            var _column = arguments[1];\n            while (_column >= 0) {\n                if (this.matrixForNavigation[arguments[0]][_column] !== undefined && this.matrixForNavigation[arguments[0]][_column] !== null) {\n                    this.activeElement.blur();\n                    this.currentX = arguments[0];\n                    this.currentY = _column;\n                    this.activeElement = this.matrixForNavigation[this.currentX][this.currentY];\n                    this.activeElement.focus();\n                    return true;\n                }\n                _column--;\n            }\n            return false;\n        }.bind(this)\n\n        var check_the_right = function() {\n            var _column = arguments[1];\n            while (_column < maxWidth) {\n                if (this.matrixForNavigation[arguments[0]][_column] !== undefined && this.matrixForNavigation[arguments[0]][_column] !== null) {\n                    this.activeElement.blur();\n                    this.currentX = arguments[0];\n                    this.currentY = _column;\n                    this.activeElement = this.matrixForNavigation[this.currentX][this.currentY];\n                    this.activeElement.focus();\n                    return true;\n                }\n                _column++;\n            }\n            return false;\n        }.bind(this)\n\n        var check_the_top = function() {\n            var _row = arguments[0];\n            while (_row >= 0) {\n                if (this.matrixForNavigation[_row][arguments[1]] !== undefined && this.matrixForNavigation[_row][arguments[1]] !== null) {\n                    this.activeElement.blur();\n                    this.currentY = arguments[1];\n                    this.currentX = _row;\n                    this.activeElement = this.matrixForNavigation[this.currentX][this.currentY];\n                    this.activeElement.focus();\n                    return true;\n                }\n                _row--;\n            }\n            return false;\n        }.bind(this)\n\n        var check_the_bottom = function() {\n            var _row = arguments[0];\n            while (_row < maxHeight) {\n                if (this.matrixForNavigation[_row][arguments[1]] !== undefined && this.matrixForNavigation[_row][arguments[1]] !== null) {\n                    this.activeElement.blur();\n                    this.currentY = arguments[1];\n                    this.currentX = _row;\n                    this.activeElement = this.matrixForNavigation[this.currentX][this.currentY];\n                    this.activeElement.focus();\n                    return true;\n                }\n                _row++;\n            }\n            return false;\n        }.bind(this)\n\n        if (this.matrixForNavigation != null && this.matrixForNavigation.length != 0) {\n            this.currentEvent = event;\n            if (event.keyCode == 40) { //Navigating down in vertical direction\n                if (this.currentX + 1 >= maxHeight) { //\"Nothing is DOWN!\"\n\n                } else if (this.matrixForNavigation[this.currentX + 1][this.currentY] != undefined && this.matrixForNavigation[this.currentX + 1][this.currentY] != this.activeElement) {\n                    this.activeElement.blur();\n                    this.currentX = this.currentX + 1;\n                    this.activeElement = this.matrixForNavigation[this.currentX][this.currentY];\n                    this.activeElement.focus();\n                } else if (this.matrixForNavigation[this.currentX + 1][this.currentY] !== undefined && this.matrixForNavigation[this.currentX + 1][this.currentY] != this.activeElement && this.matrixForNavigation[this.currentX + 1][this.currentY] === null) {\n                    var bottom = this.currentX + 1;\n                    var found = false;\n                    while (bottom < maxHeight) {\n                        if (this.matrixForNavigation[bottom][this.currentY] != null) {\n                            this.activeElement.blur();\n                            this.currentX = bottom;\n                            this.activeElement = this.matrixForNavigation[this.currentX][this.currentY];\n                            this.activeElement.focus();\n                            found = true;\n                            break;\n                        }\n                        bottom++;\n                    }\n\n                    if (this.currentY >= 0 && !found) {\n                        var check = check_the_left(this.currentX + 1, this.currentY);\n                        if (check == false) {\n                            check_the_right(this.currentX + 1, this.currentY);\n                        }\n                    }\n                } else if (this.matrixForNavigation[this.currentX + 1][this.currentY] === this.activeElement) {\n                    var bottom = this.currentX + 1;\n                    while (bottom < maxHeight) {\n                        if (this.matrixForNavigation[bottom][this.currentY] != this.activeElement) {\n                            this.activeElement.blur();\n                            this.currentX = bottom;\n                            this.activeElement = this.matrixForNavigation[this.currentX][this.currentY];\n                            this.activeElement.focus();\n                            break;\n                        }\n                        bottom++;\n                    }\n                } else {\n\n                }\n            } else if (event.keyCode == 38) {\n                if (this.currentX - 1 < 0) { //\"Nothing is UP !!\"\n\n                } else if (this.matrixForNavigation[this.currentX - 1][this.currentY] != undefined && this.matrixForNavigation[this.currentX - 1][this.currentY] != this.activeElement) {\n                    this.activeElement.blur();\n                    this.currentX = this.currentX - 1;\n                    this.activeElement = this.matrixForNavigation[this.currentX][this.currentY];\n                    this.activeElement.focus();\n                } else if (this.matrixForNavigation[this.currentX - 1][this.currentY] !== undefined && this.matrixForNavigation[this.currentX - 1][this.currentY] != this.activeElement && this.matrixForNavigation[this.currentX - 1][this.currentY] === null) {\n\n                    var top = this.currentX - 1;\n                    var found = false;\n                    while (top >= 0) {\n                        if (this.matrixForNavigation[top][this.currentY] != null) {\n                            this.activeElement.blur();\n                            this.currentX = top;\n                            this.activeElement = this.matrixForNavigation[this.currentX][this.currentY];\n                            this.activeElement.focus();\n                            found = true;\n                            break;\n                        }\n                        top--;\n                    }\n\n                    if (this.currentY > 0 && !found) {\n                        var check = check_the_left(this.currentX - 1, this.currentY);\n                        if (check == false) {\n                            check_the_right(this.currentX - 1, this.currentY);\n                        }\n                    }\n                } else if (this.matrixForNavigation[this.currentX - 1][this.currentY] === this.activeElement) {\n\n                    var top = this.currentX - 1;\n                    while (top >= 0) {\n                        if (this.matrixForNavigation[top][this.currentY] != this.activeElement) {\n                            this.activeElement.blur();\n                            this.currentX = top;\n                            this.activeElement = this.matrixForNavigation[this.currentX][this.currentY];\n                            this.activeElement.focus();\n                            break;\n                        }\n                        top--;\n                    }\n                } else {\n\n                }\n            } else if (event.keyCode == 39) {\n                if (this.currentY + 1 >= maxWidth) { //\"Nothing is RIGHT !\"\n\n                } else if (this.matrixForNavigation[this.currentX][this.currentY + 1] != undefined && this.matrixForNavigation[this.currentX][this.currentY + 1] != this.activeElement) {\n                    this.activeElement.blur();\n                    this.currentY = this.currentY + 1;\n                    this.activeElement = this.matrixForNavigation[this.currentX][this.currentY];\n                    this.activeElement.focus();\n                } else if (this.matrixForNavigation[this.currentX][this.currentY + 1] !== undefined && this.matrixForNavigation[this.currentX][this.currentY + 1] != this.activeElement && this.matrixForNavigation[this.currentX][this.currentY + 1] === null) {\n                    var found = false;\n                    var right = this.currentY + 1;\n                    while (right < maxWidth) {\n                        if (this.matrixForNavigation[this.currentX][right] != null) {\n                            this.activeElement.blur();\n                            this.currentY = right;\n                            this.activeElement = this.matrixForNavigation[this.currentX][this.currentY];\n                            this.activeElement.focus();\n                            found = true;\n                            break;\n                        }\n                        right++;\n                    }\n\n                    if (this.currentY > 0 && !found) {\n                        var check = check_the_top(this.currentX, this.currentY + 1);\n                        if (check == false) {\n                            check_the_bottom(this.currentX, this.currentY + 1);\n                        }\n                    }\n                } else if (this.matrixForNavigation[this.currentX][this.currentY + 1] === this.activeElement) {\n                    var right = this.currentY + 1;\n                    while (right < maxWidth) {\n                        if (this.matrixForNavigation[this.currentX][right] != this.activeElement) {\n                            this.activeElement.blur();\n                            this.currentY = right;\n                            this.activeElement = this.matrixForNavigation[this.currentX][this.currentY];\n                            this.activeElement.focus();\n                            break;\n                        }\n                        right++;\n                    }\n                } else {\n\n                }\n            } else if (event.keyCode == 37) {\n                if (this.currentY - 1 < 0) { //\"Nothing is LEFT !!\"\n\n                } else if (this.matrixForNavigation[this.currentX][this.currentY - 1] != undefined && this.matrixForNavigation[this.currentX][this.currentY - 1] != this.activeElement) {\n                    this.activeElement.blur();\n                    this.currentY = this.currentY - 1;\n                    this.activeElement = this.matrixForNavigation[this.currentX][this.currentY];\n                    this.activeElement.focus();\n                } else if (this.matrixForNavigation[this.currentX][this.currentY - 1] !== undefined && this.matrixForNavigation[this.currentX][this.currentY - 1] != this.activeElement && this.matrixForNavigation[this.currentX][this.currentY - 1] === null) {\n                    var left = this.currentY - 1;\n                    var found = false;\n                    while (left >= 0) {\n                        if (this.matrixForNavigation[this.currentX][left] != null) {\n                            this.activeElement.blur();\n                            this.currentY = left;\n                            this.activeElement = this.matrixForNavigation[this.currentX][this.currentY];\n                            this.activeElement.focus();\n                            found = true;\n                            break;\n                        }\n                        left--;\n                    }\n\n                    if (this.currentX > 0 && !found) {\n                        var check = check_the_top(this.currentX, this.currentY - 1);\n                        if (check == false) {\n                            check_the_bottom(this.currentX, this.currentY - 1);\n                        }\n                    }\n                } else if (this.matrixForNavigation[this.currentX][this.currentY - 1] === this.activeElement) {\n                    var left = this.currentY - 1;\n                    while (left >= 0) {\n                        if (this.matrixForNavigation[this.currentX][left] != this.activeElement) {\n                            this.activeElement.blur();\n                            this.currentY = left;\n                            this.activeElement = this.matrixForNavigation[this.currentX][this.currentY];\n                            this.activeElement.focus();\n                            break;\n                        }\n                        left--;\n                    }\n                } else {\n\n                }\n            } else {\n\n            }\n        } else {}\n    } else {\n        console.log(\"Navigation is paused\");\n    }\n}.bind(naviBoard);\n\nmasterElement.addEventListener(\"keydown\", handleKeyDown, true);\n\nmodule.exports = naviBoard;"],"sourceRoot":""}